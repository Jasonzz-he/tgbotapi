syntax = "proto3";

package botproto;

import "tgbotapi.proto";

// return Message
// Use this method to send invoices. On success, the sent Message is returned.
message sendInvoice {
	int32                 chat_id                       = 1; // Yes Unique identifier for the target private chat
	string                title                         = 2; // Yes Product name, 1-32 characters
	string                description                   = 3; // Yes Product description, 1-255 characters
	string                payload                       = 4; // Yes Bot-defined invoice payload, 1-128 bytes. This will not be displayed to the user, use for your internal processes.
	string                provider_token                = 5; // Yes Payments provider token, obtained via Botfather
	string                start_parameter               = 6; // Yes Unique deep-linking parameter that can be used to generate this invoice when used as a start parameter
	string                currency                      = 7; // Yes Three-letter ISO 4217 currency code, see more on currencies
	repeated LabeledPrice prices                        = 8; // Yes Price breakdown, a list of components (e.g. product price, tax, discount, delivery cost, delivery tax, bonus, etc.)
	string                provider_data                 = 9; // Optional JSON-encoded data about the invoice, which will be shared with the payment provider. A detailed description of required fields should be provided by the payment provider.
	string                photo_url                     = 10; // Optional URL of the product photo for the invoice. Can be a photo of the goods or a marketing image for a service. People like it better when they see what they are paying for.
	int32                 photo_size                    = 11; // Optional Photo size
	int32                 photo_width                   = 12; // Optional Photo width
	int32                 photo_height                  = 13; // Optional Photo height
	bool                  need_name                     = 14; // Optional Pass True, if you require the user's full name to complete the order
	bool                  need_phone_number             = 15; // Optional Pass True, if you require the user's phone number to complete the order
	bool                  need_email                    = 16; // Optional Pass True, if you require the user's email address to complete the order
	bool                  need_shipping_address         = 17; // Optional Pass True, if you require the user's shipping address to complete the order
	bool                  send_phone_number_to_provider = 18; // Optional Pass True, if user's phone number should be sent to provider
	bool                  send_email_to_provider        = 19; // Optional Pass True, if user's email address should be sent to provider
	bool                  is_flexible                   = 20; // Optional Pass True, if the final price depends on the shipping method
	bool                  disable_notification          = 21; // Optional Sends the message silently. Users will receive a notification with no sound.
	int32                 reply_to_message_id           = 22; // Optional If the message is a reply, ID of the original message
	InlineKeyboardMarkup  reply_markup                  = 23; // Optional A JSON-serialized object for an inline keyboard. If empty, one 'Pay ' button will be shown. If not empty, the first button must be a Pay button.
}

